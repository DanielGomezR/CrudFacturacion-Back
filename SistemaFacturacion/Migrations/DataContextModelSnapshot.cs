// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaFacturacion.Dominio.Data;

namespace SistemaFacturacion.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SistemaFacturacion.Dominio.Entidades.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("SistemaFacturacion.Dominio.Entidades.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("fecha_nacimiento")
                        .HasColumnType("Date");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SistemaFacturacion.Dominio.Entidades.DetalleFactura", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("idfactura")
                        .HasColumnType("int");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<double>("subtotal")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("idfactura");

                    b.HasIndex("idproducto");

                    b.ToTable("DetalleFacturas");
                });

            modelBuilder.Entity("SistemaFacturacion.Dominio.Entidades.Factura", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("createdday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("Date");

                    b.Property<int>("idcliente")
                        .HasColumnType("int");

                    b.Property<double>("iva")
                        .HasColumnType("float");

                    b.Property<double>("subtotal")
                        .HasColumnType("float");

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("idcliente");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("SistemaFacturacion.Dominio.Entidades.Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidadActual")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("idcategoria")
                        .HasColumnType("int");

                    b.Property<double>("precio")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("idcategoria");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("SistemaFacturacion.Dominio.Entidades.DetalleFactura", b =>
                {
                    b.HasOne("SistemaFacturacion.Dominio.Entidades.Factura", "Factura")
                        .WithMany("DetalleFacturas")
                        .HasForeignKey("idfactura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaFacturacion.Dominio.Entidades.Producto", "Producto")
                        .WithMany("DetalleFacturas")
                        .HasForeignKey("idproducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("SistemaFacturacion.Dominio.Entidades.Factura", b =>
                {
                    b.HasOne("SistemaFacturacion.Dominio.Entidades.Cliente", "Cliente")
                        .WithMany("Facturas")
                        .HasForeignKey("idcliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SistemaFacturacion.Dominio.Entidades.Producto", b =>
                {
                    b.HasOne("SistemaFacturacion.Dominio.Entidades.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("idcategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("SistemaFacturacion.Dominio.Entidades.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("SistemaFacturacion.Dominio.Entidades.Cliente", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("SistemaFacturacion.Dominio.Entidades.Factura", b =>
                {
                    b.Navigation("DetalleFacturas");
                });

            modelBuilder.Entity("SistemaFacturacion.Dominio.Entidades.Producto", b =>
                {
                    b.Navigation("DetalleFacturas");
                });
#pragma warning restore 612, 618
        }
    }
}
